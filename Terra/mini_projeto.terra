#include "/home/terra/TerraNet_v0.1/terra/TerraNet.defs"

// TODO O QUE MUDEI EM 02/06:
// ESPERA para 5 segundos e na parte em que tiramos mensagens da lista mudei pra verificar primeiro
// a lista vazia pra não fazer coisas desnecessárias. Mudei também o limite do random para máximo 5
// para ter uma melhor noção se os nós estão enviando suas mensagens. O código no geral aparenta
// estar funcionando bem, a questão é que se aumentarmos o tempo de espera para reenviar cada mensagem
// da lista, dá a impressão que ele não é reenviado. Se retirar a parte da espera do valor randômico,
// dá para entender melhor (neste caso, todos os nós enviam mensagens quase que simultaneamente,
// ocorrendo colisões mínimas para 4x4). Fiz um pequeno teste na parte de mandar a mensagem original
// de temperatura, tirando essa parte do par do para ocorrer apenas uma vez no código. Não fez muita
// diferença, mas funciona tirando do comentário as partes que deixei e comentando o que deve ser
// tirado do código para funcionar.
// Como esperado, o código funciona melhor testando com 4x4 do que com 8x8 (tirando o random para
// 8x8 os nós não enviavam para ninguém, somente o 11 funcionou).
// Acredito que ainda persistam colisões, mas bem mínimas.

#define ESPERA 5

var ushort nodeId = getNodeId();

pktype usrMsg from radioMsg with
	var ubyte[4] d8;
	var ushort[4] d16;
	var ulong[2] d32;
end

var ubyte stat;
var ushort paiId = 0;
var usrMsg msgRadio;

msgRadio.d16[0] = 0;

par do
	// Mensagem inicial pra saber quem é pai de cada um
	if nodeId == 11 then		
		paiId = 1;
		msgRadio.source = nodeId;
		msgRadio.target = BROADCAST;
		msgRadio.type = 1;
		emit SEND(msgRadio);
		await SEND_DONE;//(1);
	else/if nodeId != 11 and paiId == 0 then
		msgRadio = await RECEIVE(1);
		paiId = msgRadio.source;
		msgRadio.source = nodeId;
//		emit LED1(ON);
		emit SEND(msgRadio);
		await SEND_DONE;//(1);
	end
//await 5s;
with
//par do
	// Parte do envio de mensagem
	await ESPERA s;
	loop do
		emit REQ_TEMP();
		msgRadio.d16[0] = await TEMP;
		msgRadio.source = nodeId;
		msgRadio.target = paiId;
		msgRadio.type = 2;
		stat = qPut(msgRadio);
		await 15s;
	end
with
	// Parte da lista de mensagens prontas
	await ESPERA s;
	loop do
		await Q_READY;
		loop do
			var ushort ran;
			var ushort tam = qSize();
			if tam == 0 then
				break;
			else
				ran = random()%5 + 1;
				await (ran) s;
				stat = qGet(msgRadio);
				emit SEND(msgRadio);
				await SEND_DONE;
			end
		end
	end
with
	// Parte de reenvio de mensagem
	await ESPERA s;
	loop do
 		msgRadio = await RECEIVE(2);
		msgRadio.target = paiId;
		stat = qPut(msgRadio);
	end
end
